name: rainbond
on:
  workflow_dispatch:

jobs:
  rainbond:
    runs-on: ubuntu-latest
    steps:
      #- name: Creating kind cluster
      #  uses: helm/kind-action@v1.1.0
      - name: Creating k3s
        run: |
          #curl -sfL http://rancher-mirror.cnrancher.com/k3s/k3s-install.sh | INSTALL_K3S_MIRROR=cn INSTALL_K3S_EXEC="--docker --disable traefik" sh -
          curl -sfL https://get.k3s.io | INSTALL_K3S_MIRROR=cn INSTALL_K3S_EXEC="--docker --disable traefik" K3S_KUBECONFIG_MODE="644" sh -
          ls /etc/rancher/k3s/
          #export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
          mkdir /home/runner/.kube
          sudo cp /etc/rancher/k3s/k3s.yaml ~/.kube/config && sudo chown $USER: ~/.kube/config && unset KUBECONFIG
          kubectl version
          #sudo chmod -R 777 /etc/rancher/k3s/k3s.yaml
          #sudo chmod o+rw /etc/rancher/k3s/k3s.yaml 
          #kubectl --kubeconfig /etc/rancher/k3s/k3s.yaml get pods --all-namespaces
          kubectl cluster-info
          kubectl get pods --all-namespaces
      - name: Install rainbond
        run: |
          kubectl get nodes
          kubectl get pods -n kube-system
          HELMVERSION=helm-v3.2.4
          curl -sSL https://get.helm.sh/${HELMVERSION}-linux-amd64.tar.gz | \
            sudo tar xz -C /usr/local/bin --strip-components=1 linux-amd64/helm 
          helm version
          kubectl create ns rbd-system
          helm repo add rainbond https://openchart.goodrain.com/goodrain/rainbond
          helm install rainbond-operator rainbond/rainbond-operator \
               --namespace rbd-system \
               --version 1.1.1
          kubectl get pod -n rbd-system
          sleep 30
          kubectl get pods --all-namespaces
          echo $(kubectl get po rainbond-operator-0 -n rbd-system -o jsonpath="{..hostIP}")
      - name: Expose Port for Kind
        run: |
          export ID=`docker ps | awk '{print $1}' | sed -n '2p'`
          export IP=`docker inspect ${ID} |grep IPAddress | sed -n '2p'| grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}'`
          sudo apt-get install socat
          socat TCP4-LISTEN:30008,reuseaddr,fork TCP4:${IP}:30008 &
      - uses: shaowenchen/debugger-action@v2
        name: debugger
        timeout-minutes: 60
        continue-on-error: true
        with:
          ngrok_token: ${{ secrets.NGROK_TOKEN }}
          ngrok_addr_1: 30008
          ngrok_proto_1: http
